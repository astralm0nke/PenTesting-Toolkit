## Password Cracker
# It's not a bruteforcer- cracks the hashed value of a password (passwords ususally stored in hashed-values)
# Can use SQL injection on vulnerable web apps to steal hashed stored passwords
# You can just look up the password hash on google as long as u know the hashing algorithm SHA1, MD5, etc.
import hashlib, termcolor

class HashCracker:
    def __init__(self):
        self.hash_type = str(input("Which type of hash do you want to decrypt? ")).lower()
        self.filepath = str(input('Path to file to be used for bruteforce: ')) # Contains plaintext passwords
        self.hash_to_decrypt = str(input('Enter Hash Value to decrypt: '))
      
    def crack(self):  
        with open(self.filepath, 'r') as f:
            for line in f.readlines(): # !! readlines() reads line-by-line, readline() reads character-by-character !!
                if self.hash_type == 'md5':
                    hash_object = hashlib.md5(line.strip().encode())
                    hashed_word = hash_object.hexdigest()
                    if hashed_word == self.hash_to_decrypt:
                        termcolor.colored(print(f'[+] Password Found from MD5 Hash: {line.strip()}'), 'green')
                        exit(0)
                
                if self.hash_type == 'sha1':
                    hash_object = hashlib.sha1(line.strip().encode())
                    hashed_word = hash_object.hexdigest()
                    if hashed_word == self.hash_to_decrypt:
                        termcolor.colored(print(f'[+] Password Found from SHA1 Hash: {line.strip()}'), 'green')
                        exit(0)
            
            termcolor.colored(print('[-] Password Not Found.'), 'red')
    